class Solution {
    Map<Character, String> map = new HashMap() {{
        put('2', "abc");
        put('3', "def");
        put('4', "ghi");
        put('5', "jkl");
        put('6', "mno");
        put('7', "pqrs");
        put('8', "tuv");
        put('9', "wxyz");
    }};
    List<String> res = new ArrayList();
    String s = "";
    private void dfs(String digits, int i) {
        if (i == digits.length()) {
            res.add(s);
            return;
        }
        String mp = map.get(digits.charAt(i));
        for (int j = 0; j < mp.length(); j++) {
            s += mp.charAt(j);
            dfs(digits, i + 1);
            s = s.substring(0, s.length() - 1);
        }
    }
    public List<String> letterCombinations(String digits) {
        if (digits.length() == 0) {
            return new ArrayList();
        }
        dfs(digits, 0);
        return res;
    }
}
